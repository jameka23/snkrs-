@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager

@model sneakers.Models.MessagesViewModels.ChatMessagesViewModel
@{
    ViewData["Title"] = "ChatMessages";

}

<h1>ChatMessages</h1>
<div>
    @foreach (var item in Model.ChatMessages)
    {
        var currentUser = SignInManager.UserManager.GetUserId(User);
        @if (item.SenderId == currentUser || item.ReceiverId == currentUser)
        {
            <div class="currentUserMessage">
                <div class="chatUser">@item.Sneaker.User.FirstName @item.Sneaker.User.LastName</div>
                <div class="chatMessage">@item.Msg <br /> <span>@item.Date.ToString("MMMM d, hh:mm tt") </span></div>
            </div>
        }
        else
        {
            <div class="otherUserMessage">
                <div class="chatUser">@item.Sneaker.User.FirstName @item.Sneaker.User.LastName</div>
                <div class="chatMessage">@item.Msg <br /> <span>@item.Date.ToString("MMMM d, hh:mm tt") </span></div>
            </div>
        }
    }
</div>

@*<div>
        <input class="chatInput" autocomplete="off" spellcheck="false" asp-for="@Html.TextBox(@Model.MsgChat)" value=""/>
        <a asp-action="CreateMessage" asp-controller="Messages"
           asp-route-sneakerId="@Model.SneakerId"
           asp-route-chatMsg="@ViewBag.@Model.MsgChat">Send</a>
    </div>*@

<div class="messageInputContainer">
    <form autocomplete="off" class="chatInputForm" asp-action="CreateMessage">
        <input type="hidden" asp-for="@Model.SneakerId " />
        <input type="hidden" asp-for="@Model.MsgChat" />
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="chatInputDiv">
            <input class="chatInput" autocomplete="off" spellcheck="false" asp-for="@Model.MsgChat" value="" />
            <button type="submit" value="Send" class="submitButton">
                <i class="fa fa-paper-plane fa-lg"></i>
            </button>
        </div>
    </form>
</div>